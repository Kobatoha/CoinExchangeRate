import logging
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import Message
from crypto_price import get_crypto_price
from dotenv import load_dotenv
import asyncio
import os

load_dotenv()

TOKEN = os.getenv('API_TOKEN')

bot = Bot(token=TOKEN)
dp = Dispatcher()

chat_data = {}


async def check_prices():
    while True:
        for chat_id, cryptos in chat_data.items():
            for crypto_symbol, thresholds in cryptos.items():
                current_price = get_crypto_price(crypto_symbol)
                min_threshold, max_threshold = thresholds

                if current_price < min_threshold:
                    await bot.send_message(
                        chat_id,
                        f'‚ö†Ô∏è {crypto_symbol} –æ–ø—É—Å—Ç–∏–ª—Å—è –Ω–∏–∂–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –ø–æ—Ä–æ–≥–∞! '
                        f'–¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: {current_price:.2f} USD'
                    )
                elif current_price > max_threshold:
                    await bot.send_message(
                        chat_id,
                        f'üöÄ {crypto_symbol} –ø—Ä–µ–≤—ã—Å–∏–ª –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ø–æ—Ä–æ–≥! '
                        f'–¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: {current_price:.2f} USD'
                    )

        await asyncio.sleep(60)  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 60 —Å–µ–∫—É–Ω–¥


@dp.message(Command("start"))
async def start(message: Message):
    chat_id = message.chat.id
    if chat_id not in chat_data:
        chat_data[chat_id] = {}
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ /track BTC 30000 40000, —á—Ç–æ–±—ã —Å–ª–µ–¥–∏—Ç—å –∑–∞ —Ü–µ–Ω–æ–π –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã."
    )


@dp.message(Command("track"))
async def track_crypto(message: types.Message):
    chat_id = message.chat.id

    try:
        _, crypto_symbol, min_threshold, max_threshold = message.text.split()
        min_threshold = float(min_threshold)
        max_threshold = float(max_threshold)

        if chat_id not in chat_data:
            chat_data[chat_id] = {}

        chat_data[chat_id][crypto_symbol.upper()] = (min_threshold, max_threshold)
        await message.answer(
            f"–¢–µ–ø–µ—Ä—å –≤—ã –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç–µ {crypto_symbol.upper()} —Å –ø–æ—Ä–æ–≥–∞–º–∏ {min_threshold} - {max_threshold} USD."
        )

    except ValueError:
        await message.answer(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ: /track BTC 30000 40000"
        )


async def main():
    asyncio.create_task(check_prices())

    await dp.start_polling(bot)


if __name__ == '__main__':
    logging.basicConfig(level=logging.INFO)
    asyncio.run(main())
